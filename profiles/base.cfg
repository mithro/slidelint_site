[buildout]
parts =
    pyramid
    work_dirs
    instance
    instance_config
    circus
    circus_config
    worker_config
versions = versions


[mailing_config]
mailloger_host = localhost
mailloger_from = notification@example.com
mailloger_to = manager@example.com
mailloger_subject = SlideLint: Error has occurred
# credentials should be written as ", ('name', 'password')"
mailloger_credentials =

mail_host = ${:mailloger_host}
mail_port = 25
mail_subject = Slidelint: feedback received
mail_sender = ${:mailloger_from}
mail_recipients = ${:mailloger_to}


[circus]
recipe = zc.recipe.egg:script
dependent-scripts = true
eggs =
    circus
    circus-web

[pyramid]
recipe = zc.recipe.egg:script
dependent-scripts = true
eggs =
    slidelint_site


[work_dirs]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var
    ${buildout:directory}/tmp_storage
    ${buildout:directory}/debug_storage


[instance_config]
recipe = collective.recipe.template
input = ${buildout:directory}/profiles/templates/instance.ini
output = ${buildout:directory}/.instance.ini

producer_chanel = tcp://127.0.0.1:5561
collector_chanel = tcp://127.0.0.1:5560
storage_dir = ${buildout:directory}/tmp_storage
max_allowed_size = 15000000
debug_storage = ${buildout:directory}/debug_storage

app_package = slidelint_site
app_reload_templates = false
app_debug_authorization = false
app_debug_routematch = false
app_default_locale_name = en
app_debug_notfound = false
app_includes =  pyramid_tm    pyramid_zodbconn   pyramid_mailer
app_tm_attempts = 3
app_zodbconn_uri = file://%(here)s/var/Data.fs?connection_cache_size=20000
server_use = egg:chaussette#main
server_host = 0.0.0.0
server_port = 6700
logger_root_level = WARN
logger_site_level = WARN
# mailing logger config
mailloger_host = ${mailing_config:mailloger_host}
mailloger_from = ${mailing_config:mailloger_from}
mailloger_to = ${mailing_config:mailloger_to}
mailloger_subject = ${mailing_config:mailloger_subject}
mailloger_credentials = ${mailing_config:mailloger_credentials}

mail_host = ${mailing_config:mail_host}
mail_port = ${mailing_config:mail_port}
mail_subject = ${mailing_config:mail_subject}
mail_sender = ${mailing_config:mail_sender}
mail_recipients = ${mailing_config:mail_recipients}

[circus_config]
recipe = collective.recipe.template
input = ${buildout:directory}/profiles/templates/circus.ini.in
output = ${buildout:directory}/circus.ini

buildout_dir = ${buildout:directory}
worker = ${buildout:directory}/bin/slidelint_worker
worker_config = ${worker_config:output}


[worker_config]
recipe = collective.recipe.template
input = ${buildout:directory}/profiles/templates/worker_logging.in
output = ${buildout:directory}/worker_logging.conf
# worker config
producer = ${instance_config:producer_chanel}
collector = ${instance_config:collector_chanel}
slidelint = docker run -t -c 4 -v {default_config_path}:/config -v {presentation_location}:/presentation --networking=false slidelint/box slidelint -f json --files-output=/presentation/{presentation_name}.res --config={config_path} /presentation/presentation.pdf
onetime = true
debug_storage = ${buildout:directory}/debug_storage
debug_url =
# mailing logger config
mailloger_host = ${mailing_config:mailloger_host}
mailloger_from = ${mailing_config:mailloger_from}
mailloger_to = ${mailing_config:mailloger_to}
mailloger_subject = ${mailing_config:mailloger_subject}
mailloger_credentials = ${mailing_config:mailloger_credentials}


[instance]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    args="$@"
    ${buildout:directory}/bin/pserve ${buildout:directory}/.instance.ini $args
output = ${buildout:directory}/bin/instance
mode = 755
